name: Deploy to Render

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        timeout-minutes: 5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
        timeout-minutes: 5

      - name: Install dependencies
        run: |
          n=0
          until [ $n -ge 3 ]
          do
            npm install && break
            n=$((n+1))
            echo "Retry attempt $n..."
            sleep 15
          done
        timeout-minutes: 10

      - name: Build
        run: |
          echo "Starting build process..."
          # Clean the dist directory if it exists
          rm -rf dist
          # Run the build with verbose logging
          npx ng build --base-href=/online-c-store/ --verbose
          echo "Build process completed"
        timeout-minutes: 15

      - name: Verify build output
        run: |
          if [ ! -d "dist/online-c-store/browser" ]; then
            echo "Error: Build directory not found"
            echo "Current directory structure:"
            ls -R dist/
            exit 1
          fi
          echo "Build directory contents:"
          ls -la dist/online-c-store/browser
          echo "Index.html contents:"
          cat dist/online-c-store/browser/index.html | grep -i "base href"

      - name: Prepare for Render deployment
        run: |
          echo "Checking Render configuration..."
          if [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
            echo "Error: RENDER_SERVICE_ID is not set"
            exit 1
          fi
          if [ -z "${{ secrets.RENDER_API_KEY }}" ]; then
            echo "Error: RENDER_API_KEY is not set"
            exit 1
          fi
          echo "Render configuration verified"

      - name: Trigger Render Deploy
        run: |
          echo "Triggering deploy on Render..."
          RESPONSE=$(curl -v -s -X POST \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "accept: application/json" \
            -H "authorization: Bearer ${{ secrets.RENDER_API_KEY }}")

          echo "Full Deploy Response:"
          echo "$RESPONSE" | jq '.'

          if echo "$RESPONSE" | grep -q "error"; then
            echo "Deploy failed with error:"
            echo "$RESPONSE" | jq -r '.error'
            exit 1
          elif [ -z "$RESPONSE" ]; then
            echo "Error: Empty response from Render API"
            exit 1
          fi

          echo "Deploy triggered successfully"
          echo "Deploy ID: $(echo "$RESPONSE" | jq -r '.id')"
          echo "Deploy URL: $(echo "$RESPONSE" | jq -r '.service.serviceDetails.url')"
        timeout-minutes: 10
